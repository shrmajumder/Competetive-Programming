class Solution(object):
    def solve(self, board):
        """
        :type board: List[List[str]]
        :rtype: void Do not return anything, modify board in-place instead.
        """
        
        def dfs(board, i, j):
            if board[i][j] != 'O':
                return
            board[i][j] = 'D'
            if i+1 < len(board):
                dfs(board, i+1, j)
            if i-1 >= 0:
                dfs(board, i-1, j)
            if j+1 < len(board[0]):
                dfs(board, i, j+1)
            if j-1 >= 0:
                dfs(board, i, j-1)
            
        for i in range(len(board)):
            for j in range(len(board[0])):
                if board[i][j] == 'O' and (i in {0, len(board)-1} or j in {0, len(board[0])-1}):
                    dfs(board, i, j)
        
        for i in range(len(board)):
            for j in range(len(board[0])):
                if board[i][j] == 'O':
                    board[i][j] = 'X'
                elif board[i][j] == 'D':
                    board[i][j] = 'O'
