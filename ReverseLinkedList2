#SOlution 1:
class Solution(object):
    def reverseBetween(self, head, m, n):
        """
        :type head: ListNode
        :type m: int
        :type n: int
        :rtype: ListNode
        """
        a=[]
        b=[]
        dummy=head
        while dummy:
            a.append(dummy.val)
            #print (dummy.val)
            dummy=dummy.next
            
        while(m-1<n-1):
            a[m-1],a[n-1]=a[n-1],a[m-1]
            m=m+1
            n=n-1
        
        dummy=head
        for i in range(len(a)):
            curr=ListNode(a[i])
            dummy.next=curr
            dummy=curr
        return head.next


# Solution 2:
class Solution(object):
    def reverseBetween(self, head, m, n):
        """
        :type head: ListNode
        :type m: int
        :type n: int
        :rtype: ListNode
        """
        dummy = pre = ListNode(0)
        dummy.next = head
        for _ in xrange(m-1):
            pre = pre.next
        cur= pre.next
    # reverse the defined part 
        node = None
        for _ in xrange(n-m+1):
            nxt = cur.next
            cur.next = node
            node = cur
            cur= nxt
    # connect three parts
        pre.next.next = cur
        pre.next = node
        return dummy.next
